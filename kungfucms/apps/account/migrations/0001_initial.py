# Generated by Django 2.1.8 on 2019-06-25 02:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import kungfucms.apps.account.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated time')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted time')),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='指明用户是否可以登录到这个管理站点。', verbose_name='职员状态')),
                ('is_active', models.BooleanField(default=True, help_text='指明用户是否被认为活跃的。以反选代替删除帐号。', verbose_name='有效')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='加入日期')),
                ('username', models.CharField(max_length=128, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(blank=True, db_index=True, default='', max_length=254, null=True, verbose_name='电子邮件')),
                ('cellphone', models.CharField(blank=True, db_index=True, default='', max_length=128, null=True, verbose_name='Cellphone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', kungfucms.apps.account.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='OauthLoginProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated time')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted time')),
                ('is_deleted', models.BooleanField(default=False)),
                ('provider', models.CharField(db_index=True, max_length=128, verbose_name='Provider Name')),
                ('token', models.CharField(db_index=True, max_length=128, verbose_name='Provider Token')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oauth_tokens', related_query_name='oauth_token', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'Oauth Login Provider',
                'verbose_name_plural': 'Oauth Login Providers',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated time')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted time')),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(db_index=True, max_length=128, verbose_name='Name')),
                ('value', models.CharField(blank=True, default='', max_length=255, verbose_name='Value')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', related_query_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['id'],
            },
        ),
        migrations.AddIndex(
            model_name='oauthloginprovider',
            index=models.Index(fields=['user', 'provider'], name='account_oau_user_id_b82b6c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='oauthloginprovider',
            unique_together={('provider', 'token', 'user')},
        ),
    ]
